-- Hola soy un comentario 😎
--CREATE DB_SIVANA;
USE DB_SIVANA;

DROP TABLE dbo._GROUP;
DROP TABLE dbo.COURSE;

CREATE TABLE dbo.COURSE(
	ACRONYM CHAR(6) PRIMARY KEY,
	NAME VARCHAR(50) NOT NULL UNIQUE,
	CREDITS INT DEFAULT 3,
	CONSTRAINT CK_CREDITS
		CHECK (CREDITS > 0 AND CREDITS <100),
);

CREATE TABLE dbo._GROUP(
	NUMBER INT,
	SEMESTER INT,
	YEAR INT,
	ACRONYM CHAR(6),
	AVAILABLE_SPACES INT DEFAULT 0,
	ENROLLED INT DEFAULT 0,
	CONSTRAINT PK_GROUP
		PRIMARY KEY(NUMBER, SEMESTER, YEAR, ACRONYM),
	FOREIGN KEY(ACRONYM) REFERENCES COURSE(ACRONYM)
		ON DELETE NO ACTION ON UPDATE CASCADE,
	CHECK (ENROLLED <= AVAILABLE_SPACES)
);

INSERT INTO dbo.COURSE
VALUES 
	('CI0127', 'Bases de Datos', 4),
	('CI0128', 'PI', 3);

INSERT INTO COURSE(NAME, ACRONYM, CREDITS)
VALUES ('Inge', 'CI0126', 4);

INSERT INTO dbo._GROUP(ACRONYM, NUMBER, SEMESTER, YEAR, AVAILABLE_SPACES, ENROLLED)
VALUES 
	('CI0127','2', '1', '2022', 20, 18),
	('CI0127','2', '2', '2021', 20, 18),
	('CI0126','2', '1', '2022', 20, 18),
	('CI0128','2', '1', '2022', 20, 20),
	('CI0127','1', '1', '2019', 25, 25);

SELECT *
FROM _GROUP;

SELECT *
FROM COURSE;

DELETE FROM COURSE
WHERE CREDITS > 3;

UPDATE COURSE
SET CREDITS = 3
WHERE ACRONYM = 'CI0127'; 

UPDATE COURSE
SET CREDITS = CREDITS * 1.5;

SELECT *
FROM COURSE
WHERE (CREDITS BETWEEN 3 AND 4);

-- CROSS PRODUCT
SELECT C.ACRONYM, G.ACRONYM, NAME, CREDITS, NUMBER, SEMESTER, YEAR
FROM COURSE AS C, _GROUP AS G

SE PUEDE HACER CON UN JOIN
SELECT NAME, CREDITS, NUMBER, SEMESTER, YEAR
FROM COURSE AS C, _GROUP AS G
WHERE C.ACRONYM = G.ACRONYM AND NUMBER = 2
ORDER BY YEAR, SEMESTER

SELECT DISTINCT YEAR
FROM _GROUP;

SELECT *
FROM _GROUP
WHERE ACRONYM LIKE '_____7';

(
	SELECT ACRONYM, NUMBER
	FROM _GROUP
	WHERE SEMESTER = 1
)
INTERSECT
(
	SELECT ACRONYM, NUMBER
	FROM _GROUP
	WHERE YEAR = 2022
)

SELECT *
FROM _GROUP

SELECT AVG(ENROLLED) AS AVG_ENROLLED, 
		COUNT(DISTINCT ENROLLED) AS DISTINCT_ENROLLED_SIZE, 
		MAX(AVAILABLE_SPACES) AS MAX_SPACES_GROUP, 
		COUNT(*) AS NUMBER_GROUPS
FROM _GROUP;