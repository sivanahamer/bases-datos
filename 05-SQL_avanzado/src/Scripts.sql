SELECT *
FROM dbo._GROUP;

SELECT *
FROM dbo.COURSE;

--Agregamos un dato nulo
INSERT INTO _GROUP(NUMBER, SEMESTER, YEAR, ACRONYM, AVAILABLE_SPACES, ENROLLED)
VALUES (1, 2, 2025, 'CI0126', NULL, NULL);

INSERT INTO _GROUP(NUMBER, SEMESTER, YEAR, ACRONYM)
VALUES (1, 2, 2030, 'CI0126');

--NO Funciona 😔
SELECT *
FROM _GROUP
WHERE AVAILABLE_SPACES = NULL

-- Si funciona 😁
SELECT *
FROM _GROUP
WHERE AVAILABLE_SPACES IS NOT NULL;

-- 🐣 Nested query
SELECT _NAME, CREDITS 
FROM COURSE
WHERE ACRONYM IN (
	SELECT ACRONYM
	FROM _GROUP
	WHERE YEAR < 2023
);

SELECT DISTINCT _NAME, CREDITS
FROM COURSE AS C JOIN _GROUP AS G ON C.ACRONYM = G.ACRONYM
WHERE YEAR < 2023;

INSERT INTO COURSE(ACRONYM, _NAME, CREDITS)
VALUES ('MA0291', 'Intro a mate para computines', 4);

-- JOIN NORMAL
SELECT *
FROM COURSE AS C JOIN _GROUP AS G ON C.ACRONYM = G.ACRONYM;

-- FULL OUTER JOIN
SELECT *
FROM COURSE AS C  FULL OUTER JOIN _GROUP AS G ON C.ACRONYM = G.ACRONYM;

-- FULL OUTER JOIN - JOIN
SELECT *
FROM COURSE AS C  FULL OUTER JOIN _GROUP AS G ON C.ACRONYM = G.ACRONYM
WHERE G.ACRONYM IS NULL OR C.ACRONYM IS NULL;

-- MORE SELECT CLAUSES
SELECT COUNT(*) AS NUMBER_COURSES, YEAR
FROM COURSE AS C JOIN _GROUP AS G ON C.ACRONYM = G.ACRONYM
WHERE SEMESTER = 2
GROUP BY YEAR
HAVING COUNT(*) > 1;

-- VISTAS 😎
CREATE VIEW GROUPS_PER_YEAR_SEMESTER AS
SELECT COUNT(*) AS NUMBER_GROUPS, YEAR, SEMESTER
FROM COURSE AS C JOIN _GROUP AS G ON C.ACRONYM = G.ACRONYM
GROUP BY YEAR, SEMESTER

SELECT *
FROM GROUPS_PER_YEAR_SEMESTER;

INSERT INTO GROUPS_PER_YEAR_SEMESTER(NUMBER_GROUPS, YEAR, SEMESTER)
VALUES (2, 2033, 1);

-- STORED PROCEDURES
-- private int contarGrupos(String acronym){
--	int resultado = 0;
--	...
--	return resultado;
-- }

CREATE PROCEDURE CONTAR_GRUPOS 
	@Acronym CHAR(6)
AS
BEGIN
SELECT COUNT(*) AS CUENTA_GRUPOS
FROM _GROUP
WHERE @Acronym = ACRONYM
END

EXEC CONTAR_GRUPOS 'MA0291';
