"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Clases","href":"/bases-datos/docs/","docId":"README"},{"type":"link","label":"Introducci\xf3n","href":"/bases-datos/docs/introduccion/","docId":"introduccion/README"},{"type":"link","label":"Dise\xf1o conceptual","href":"/bases-datos/docs/conceptual/","docId":"conceptual/README"},{"type":"link","label":"Dise\xf1o l\xf3gico","href":"/bases-datos/docs/logico/","docId":"logico/README"},{"type":"link","label":"SQL b\xe1sico","href":"/bases-datos/docs/sql_basico/","docId":"sql_basico/README"},{"type":"link","label":"SQL avanzado","href":"/bases-datos/docs/SQL_avanzado/","docId":"SQL_avanzado/README"},{"type":"link","label":"Calidad del dise\xf1o","href":"/bases-datos/docs/Calidad/","docId":"Calidad/README"},{"type":"link","label":"Organizaci\xf3n f\xedsica","href":"/bases-datos/docs/Fisico/","docId":"Fisico/README"},{"type":"link","label":"Optimizaci\xf3n","href":"/bases-datos/docs/Optimizacion/","docId":"Optimizacion/README"},{"type":"link","label":"Transacciones","href":"/bases-datos/docs/Transacciones/","docId":"Transacciones/README"},{"type":"link","label":"Control de concurrencia","href":"/bases-datos/docs/Concurrencia/","docId":"Concurrencia/README"}]},"docs":{"Calidad/README":{"id":"Calidad/README","title":"Evaluaci\xf3n de la calidad del dise\xf1o","description":"Con el dise\xf1o de una base de datos, existen algunas gu\xedas informales para asegurar que se tiene buena calidad. Adem\xe1s, estas reglas se basan en evitar la redundancia por medio de la normalizaci\xf3n.","sidebar":"tutorialSidebar"},"conceptual/README":{"id":"conceptual/README","title":"Dise\xf1o conceptual","description":"En el ciclo de desarrollo tenemos las siguientes etapas:","sidebar":"tutorialSidebar"},"Concurrencia/README":{"id":"Concurrencia/README","title":"Control de la concurrencia","description":"Work in progress...","sidebar":"tutorialSidebar"},"Fisico/README":{"id":"Fisico/README","title":"Organizaci\xf3n f\xedsica de archivos","description":"Si bien cuando usamos las bases de datos no detallamos c\xf3mo es que se guardan los datos dentro de ella, los DBMS hacen uso de un dise\xf1o f\xedsico. Generalmente este dise\xf1o f\xedsico est\xe1 basado en disco duro. Principalmente, los DBMS utilizan cuatro conceptos importantes \xedndices ordenados e \xedndices multinivel. Cada uno de estos \xedndices tiene distintas variaciones.","sidebar":"tutorialSidebar"},"introduccion/README":{"id":"introduccion/README","title":"Introducci\xf3n a las bases de datos","description":"Las bases de datos son muy utilizadas hoy en d\xeda. Por ejemplo, la base de datos de Google nos permite realizar b\xfasquedas indexando billones de p\xe1ginas de la web. Otro ejemplo es cualquier medio social como Facebook, Instragam y Tik Tok que almacenan billones de videos, im\xe1genes, comentarios, amistades y seguidores. Otro sistema dentro del contexto nacional es EDUS que guarda toda la informaci\xf3n m\xe9dica nacional. Si bien las bases de datos est\xe1n presentes y utilizados en nuestro d\xeda a d\xeda, ocupamos entender c\xf3mo es que funcionan estos sistemas de bases de datos (DataBase Systems) con sus manejadores de sistema (DataBase Management Systems). Adem\xe1s, hay muchas particularidades de estos sistemas que los hacen diferentes de otros sistemas vistos en la carrera.","sidebar":"tutorialSidebar"},"logico/README":{"id":"logico/README","title":"Dise\xf1o l\xf3gico","description":"Luego de crear un dise\xf1o conceptual, se tiene que mapear a un dise\xf1o l\xf3gico para que se pueda implementar en un DBMS particular. Para ello, vamos a ocupar un modelo l\xf3gico, que en nuestro caso es el modelo relacional.","sidebar":"tutorialSidebar"},"Optimizacion/README":{"id":"Optimizacion/README","title":"Optimizaci\xf3n de consultas","description":"Realizar una consulta \xf3ptima dentro de una base de datos es sumamente importante. Los DBMS utilizan ciertas t\xe9cnicas que se basan en heur\xedsticas y estimaciones basadas en costos. La primera se basa en \xe1lgebra relacional de bases de datos, mientras que la segunda se basa en estimar costos de distintas operaciones utilizando distintas estructuras de almacenamiento f\xedsico (puede ser o no estructuras auxiliares).","sidebar":"tutorialSidebar"},"README":{"id":"README","title":"Clases","description":"En este sitio, se encuentra informaci\xf3n relevante y material de clases. Puede acceder a las distintas p\xe1ginas a continuaci\xf3n para encontrar m\xe1s informaci\xf3n.","sidebar":"tutorialSidebar"},"SQL_avanzado/README":{"id":"SQL_avanzado/README","title":"Uso avanzado de SQL","description":"Podemos utilizar SQL para hacer distintos tipos de consultas. Sin embargo, podemos hacer consultas mucho m\xe1s complejas en SQL por medio de JOINs, SELECTs anidados, triggers y otras funcionalidades adicionales. Adem\xe1s, se va a discutir sobre problemas de seguridad en SQL por medio de inyecci\xf3n de c\xf3digo.","sidebar":"tutorialSidebar"},"sql_basico/README":{"id":"sql_basico/README","title":"Uso b\xe1sico de SQL","description":"Basado en nuestro dise\xf1o l\xf3gico, podemos implementar la base de datos por medio de SQL (Structured Query Language). Con este lenguaje, podemos definir nuestro esquema de bases de datos. Adem\xe1s, podemos manipular datos almacenados dentro de la base de datos para agregarlos, seleccionarlos, actualizarlos y borrarlos. Estas son operaciones CRUD (Create Retrieve Update Delete).","sidebar":"tutorialSidebar"},"Transacciones/README":{"id":"Transacciones/README","title":"Transacciones","description":"Work in progress...","sidebar":"tutorialSidebar"}}}')}}]);